# Generated by Django 4.1.2 on 2022-11-01 12:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='level_access_network',
            fields=[
                ('id_level_access_network', models.BigAutoField(primary_key=True, serialize=False)),
                ('type_level_access', models.TextField(max_length=20, verbose_name='Тип разрешения доступа к сети')),
            ],
            options={
                'verbose_name': 'Уровень доступа к сети',
                'verbose_name_plural': 'Уровень доступа к сети',
            },
        ),
        migrations.CreateModel(
            name='level_access_network_devices',
            fields=[
                ('id_level_access_network_devices', models.BigAutoField(primary_key=True, serialize=False)),
                ('attribute', models.TextField(default='Mikrotik-Group', max_length=25, verbose_name='Аттрибут')),
                ('type_level_access', models.TextField(max_length=20, verbose_name='Тип разрешения доступа к сетевому оборудованию')),
            ],
            options={
                'verbose_name': 'Уровень доступа к сетевому оборудованию ',
                'verbose_name_plural': 'Уровень доступа к сетевому оборудованию',
            },
        ),
        migrations.CreateModel(
            name='nas',
            fields=[
                ('id_nas', models.BigAutoField(primary_key=True, serialize=False)),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP адрес')),
                ('short_name', models.TextField(max_length=30, verbose_name='Имя')),
                ('secret_key', models.TextField(max_length=30, verbose_name='Секретный ключ')),
            ],
            options={
                'verbose_name': 'Сервер сетевого доступа',
                'verbose_name_plural': 'Сервер сетевого доступа',
            },
        ),
        migrations.CreateModel(
            name='nas_port_type',
            fields=[
                ('id_nas_port_type', models.BigAutoField(primary_key=True, serialize=False)),
                ('port_type', models.TextField(max_length=20, verbose_name='Тип порта NAS')),
            ],
            options={
                'verbose_name': 'Порт подключения',
                'verbose_name_plural': 'Порт подключения',
            },
        ),
        migrations.CreateModel(
            name='user_groups',
            fields=[
                ('id_user_group', models.BigAutoField(primary_key=True, serialize=False)),
                ('group', models.TextField(max_length=40, verbose_name='Группа')),
                ('id_level_access_network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.level_access_network', verbose_name='Тип разрешения доступа к сети')),
                ('id_level_access_network_devices', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.level_access_network_devices', verbose_name='Тип разрешения доступа к сетевому оборудованию')),
            ],
            options={
                'verbose_name': 'Группы пользователей ',
                'verbose_name_plural': 'Группы пользователей',
            },
        ),
        migrations.CreateModel(
            name='users',
            fields=[
                ('id_users', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.TextField(max_length=40, null=True, verbose_name='Фамилия')),
                ('uname', models.TextField(blank=True, max_length=20, null=True, verbose_name='Имя')),
                ('ulast_name', models.TextField(blank=True, max_length=30, null=True, verbose_name='Отчество')),
                ('email', models.EmailField(default='user@mail.com', max_length=254, verbose_name='Электронный адрес')),
                ('network_login', models.TextField(default='', help_text='Логин для подключения к сетевому оборудованию (Необязательно)', max_length=30, verbose_name='Логин для подключения к сетевому оборудованию')),
                ('id_level_access_network_devices', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.level_access_network_devices', verbose_name='Тип разрешения доступа к сетевому оборудованию')),
                ('id_user_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.user_groups', verbose_name='Группа пользователя')),
                ('level_access_network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.level_access_network', verbose_name='Тип разрешения доступа к сети')),
            ],
            options={
                'verbose_name': 'Пользователи',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='fail_tries',
            fields=[
                ('id_fail_try', models.BigAutoField(primary_key=True, serialize=False)),
                ('id_nas_connect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.nas', verbose_name='На каком NAS произошла ошибка')),
                ('id_nas_port', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_requests_created', to='website.nas_port_type', verbose_name='Тип доступа')),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.nas_port_type')),
            ],
            options={
                'verbose_name': 'Неуспешные попытки подключения',
                'verbose_name_plural': 'Неуспешные попытки подключения',
            },
        ),
        migrations.CreateModel(
            name='accounting',
            fields=[
                ('id_acct', models.BigAutoField(primary_key=True, serialize=False)),
                ('ip_access', models.GenericIPAddressField(verbose_name='IP')),
                ('acct_start_time', models.DateTimeField(verbose_name='Начало учёта')),
                ('acct_update_time', models.DateTimeField(verbose_name=' Обновление учёта')),
                ('acct_stop_time', models.DateTimeField(verbose_name='Конец учёта')),
                ('connect_info_start', models.DateTimeField(verbose_name='Начало соединения')),
                ('connect_info_stop', models.DateTimeField(verbose_name='Конец соединения')),
                ('id_nas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.nas', verbose_name='NAS')),
                ('id_nas_port', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_requests_created', to='website.nas_port_type', verbose_name='Тип доступа')),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.users', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Учёт запросов',
                'verbose_name_plural': 'Учёт запросов',
            },
        ),
    ]
